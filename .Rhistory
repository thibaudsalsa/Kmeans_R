clear
# Load the data in your R environment
# This should give you dataframe "cluster.data"
load("cluster.RData")
# Load the data in your R environment
# This should give you dataframe "cluster.data"
load("cluster.RData")
source('~/K-nn/KNN.R')
source('~/K-nn/KNN.R')
source('~/K-nn/KNN.R')
source('~/K-nn/KNN.R')
source('~/K-nn/KNN.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('C:/Users/danae/Downloads/HW2_R_codes.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
View(km.cl)
source('C:/Users/danae/Downloads/HW2_R_codes.R')
source('C:/Users/danae/Downloads/HW2_R_codes.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('C:/Users/danae/Downloads/HW2_R_codes.R')
View(my_dist_calculator)
View(my_dist_calculator)
View(my_dist_calculator)
source('~/K-nn/Kmeans.R')
source('C:/Users/danae/Downloads/HW2_R_codes.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
# parameters "a" and "b" are two vectors
# Manhattan distance is calculated between "a" and "b" when metric = "manhattan"
# otherwise Euclidean distance is calculated and returned by the function
distCalculator <- function(a, b, metric = "euclidean") {
if(metric == "manhattan") {
# write code for calculating manhattan distance, use the formula
mydistance <- 0
for (i in 1:length(a)) {
mydistance <- sum(mydistance + abs(a[i] - b[i]))
}
} else {
# write code for calculating euclidean distance, use the forumula
mydistance <- 0
for (i in 1:length(a)) {
mydistance <- sum(mydistance + ((a[i] - b[i]) * (a[i]-b[i])))
}
mydistance <- sqrt(mydistance)
}
return(mydistance)
}
source('~/K-nn/Kmeans.R')
source('C:/Users/danae/Downloads/HW2_R_codes.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('C:/Users/danae/Downloads/HW2_R_codes.R')
source('C:/Users/danae/Downloads/HW2_R_codes.R')
source('C:/Users/danae/Downloads/HW2_R_codes.R')
source('~/K-nn/Kmeans.R')
load("~/K-nn/cluster.RData")
load("~/K-nn/.RData")
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
source('~/K-nn/Kmeans.R')
